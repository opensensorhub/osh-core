/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.
 
Copyright (C) 2019 Sensia Software LLC. All Rights Reserved.
 
******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.api.command;

import org.sensorhub.api.feature.FeatureId;
import org.vast.data.TextEncodingImpl;
import org.vast.util.IResource;
import org.vast.util.TimeExtent;
import net.opengis.swe.v20.DataComponent;
import net.opengis.swe.v20.DataEncoding;


/**
 * <p>
 * Interface for command stream descriptors
 * </p>
 *
 * @author Alex Robin
 * @date Mar 26, 2021
 */
public interface ICommandStreamInfo extends IResource
{
    
    /**
     * @return The identifier of the system that exposes this command stream
     */
    FeatureId getSystemID();

    
    /**
     * @return The name of the system control input that receives commands
     * from this stream
     */
    String getControlInputName();
    

    /**
     * @return The structure of the command parameters
     */
    DataComponent getRecordStructure();

    
    /**
     * @return The recommended encoding for the command parameters
     */
    default DataEncoding getRecordEncoding()
    {
        return new TextEncodingImpl();
    }
    
    
    /**
     * @return The time of validity of this command stream. This corresponds
     * to the time during which the corresponding control input actually
     * existed.
     */
    TimeExtent getValidTime();
    
    
    /**
     * @return The range of issue times of commands that are part of this
     * command stream, or null if no commands have been recorded yet.
     */
    TimeExtent getIssueTimeRange();
    
    
    /**
     * @return The range of actuation times of commands that are part of this
     * command stream, or null if no commands have been recorded yet.
     */
    TimeExtent getExecutionTimeRange();
    
    
    /**
     * @return True if this command channel generates command results, false
     * otherwise. Note that this returns true whether results are generated
     * inline or not.
     */
    boolean hasResult();
    
    
    /**
     * @return True if this command channel generates inline command results,
     * false otherwise
     */
    default boolean hasInlineResult()
    {
        return getResultStructure() != null && getResultEncoding() != null;
    }
    

    /**
     * @return The structure of the inline command result data, or null if no
     * inline result is generated by this command channel.
     */
    DataComponent getResultStructure();

    
    /**
     * @return The recommended encoding for the inline command result data, or
     * null if no inline result is generated by this command channel.
     */
    DataEncoding getResultEncoding();

    /**
     * @return True if the control stream generate feasibility information
     * for commands, false otherwise
     */
    default boolean hasFeasibilityResult()
    {
        return getFeasibilityResultStructure() != null;
    }

    /**
     * @return The structure of the feasibility result data, or null if no
     * feasibility information is generated by this command channel.
     */
    DataComponent getFeasibilityResultStructure();

    /**
     * @return The recommended encoding for the feasibility result data, or
     * null if no feasibility information is generated by this command channel.
     */
    DataEncoding getFeasibilityResultEncoding();

    /**
     * @return The full name of the controlstream combining the system UID and the input name
     */
    default String getFullName()
    {
        return getSystemID().getUniqueID() + "#" + getControlInputName();
    }

}
